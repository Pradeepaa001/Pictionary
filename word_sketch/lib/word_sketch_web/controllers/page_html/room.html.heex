<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Word Sketch - Room</title>
  <link rel="stylesheet" href="/css/room.css">
</head>
<body>
  
  <div class="game-container">
    <!-- Main Content -->
    <div class="main-content">
      <!-- Room Header -->
      <div id="room-header">
        <p>Room Code: <strong id="room-code"></strong></p>
        <p>Share this with your friends!</p>
      </div>
      <!-- Game Header -->
      <div id="game-header">
        <p>Set the word using the command <strong id="word-to-draw">" \word guess_word "</strong> in the chat</p>
        <p id="countdown" class="timer"></p>
      </div>
      <!-- Canvas -->
      <div id="drawing-canvas-container">
        <canvas id="drawing-canvas" width="900" height="400"></canvas>
        <div class="controls">
          <button id="clear-canvas">Clear</button>
          <input type="color" id="color-picker" value="#000000" />
          <input type="number" id="brush-size" min="1" max="20" value="5" />
          <button id="eraser">Eraser</button>
          <button id="pen">Pen</button>
        </div>
      </div>
    </div>
    <!-- Chat Section -->
    <div id="chat-messages" class="sidebar">
      <h2>Chat</h2>
      <div id="chat" class="messages">
        <!-- Chat messages will be dynamically populated here -->
      </div>
      <input type="text" id="message" placeholder="Type your guess..." />
    </div>
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script type="module" src="/assets/js/socket.js"></script>
  <script>
    const canvas = document.getElementById('drawing-canvas');
    const ctx = canvas.getContext('2d');
    const clearCanvasButton = document.getElementById('clear-canvas');
    const colorPicker = document.getElementById('color-picker');
    const brushSize = document.getElementById('brush-size');
    const eraserButton = document.getElementById('eraser');
    const penButton = document.getElementById('pen');

    let isDrawing = false;
    let currentMode = 'pen'; // 'pen' or 'eraser'

    canvas.addEventListener('mousedown', startDrawing);
    canvas.addEventListener('mouseup', stopDrawing);
    canvas.addEventListener('mousemove', draw);
    canvas.addEventListener('mouseout', stopDrawing);

    function startDrawing(e) {
      isDrawing = true;
      ctx.beginPath();
      ctx.moveTo(e.offsetX, e.offsetY);
    }

    function stopDrawing() {
      isDrawing = false;
      ctx.closePath();
    }

    function draw(e) {
      if (!isDrawing) return;

      ctx.lineWidth = brushSize.value;
      ctx.lineCap = 'round';

      if (currentMode === 'eraser') {
        // For eraser, use globalCompositeOperation to "erase"
        ctx.globalCompositeOperation = 'destination-out';
        ctx.strokeStyle = 'rgba(0,0,0,1)';
      } else {
        // For pen, reset composite operation and use selected color
        ctx.globalCompositeOperation = 'source-over';
        ctx.strokeStyle = colorPicker.value;
      }

      ctx.lineTo(e.offsetX, e.offsetY);
      ctx.stroke();
      ctx.beginPath();
      ctx.moveTo(e.offsetX, e.offsetY);
    }

    clearCanvasButton.addEventListener('click', () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    });

    eraserButton.addEventListener('click', () => {
      currentMode = 'eraser';
      // Optional: Add visual feedback for selected tool
      eraserButton.classList.add('active');
      penButton.classList.remove('active');
    });

    penButton.addEventListener('click', () => {
      currentMode = 'pen';
      // Optional: Add visual feedback for selected tool
      penButton.classList.add('active');
      eraserButton.classList.remove('active');
    });
  </script>
</body>
</html>